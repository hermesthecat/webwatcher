stages:
#  - build
  - deploy


#Build Image:
#  stage: build
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  rules:
#    - if: $CI_COMMIT_TAG
#  script:
#    - mkdir -p /kaniko/.docker
#    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
#    - >-
#      /kaniko/executor
#      --context $CI_PROJECT_DIR
#      --destination $CI_REGISTRY_IMAGE:v$CI_COMMIT_TAG
#      --destination $CI_REGISTRY_IMAGE:latest


#Release:
#  stage: deploy
#  image: registry.gitlab.com/gitlab-org/release-cli:latest
#  rules:
#    - if: $CI_COMMIT_TAG
#  script:
#    - echo "running release"
#  release:
#    name: 'WebWatcher $CI_COMMIT_TAG'
#    description: 'v$CI_COMMIT_TAG release of WebWatcher.'
#    tag_name: '$CI_COMMIT_TAG'
#    ref: '$CI_COMMIT_TAG'


Upload to Gitlab Packages:
  stage: deploy
  image: python:3.10
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - pip install twine
    - sed -i "s/CI_COMMIT_TAG/${CI_COMMIT_TAG}/g" setup.py
    - python setup.py sdist
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*


Upload to PyPi:
  stage: deploy
  image: python:3.10
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - pip install twine
    - sed -i "s/CI_COMMIT_TAG/${CI_COMMIT_TAG}/g" setup.py
    - python setup.py sdist
    - TWINE_PASSWORD=$PYPI_PASSWORD TWINE_USERNAME=$PYPI_USERNAME python -m twine upload dist/* -v


